
oj.use require 'oj-markdown'

_template = require './_template'
_content = require './_content'
# _snippet = require './_snippet'
# _editor = require './_editor'

module.exports = ->

  _template

    title: 'Learn OJ -- Unified Templating'

    styles: [
      'reset.css'
      'gg.css'
    ]

    scripts: [
      'jquery.js'
      'underscore.js'
      'backbone.js'
      'coffee-script.js'
      'ace/ace.js'
    ]

    left: ->
      _content.renderTOC data

    right: ->
      _content.renderContent data

data = [
  {
    section: 'Introduction'
    anchor: 'intro'
    content: ->
      p 'This is a great introduction. Indeed. This is the best one yet.'
  }
  {
    section: 'Installation'
    anchor: 'install'
    content: ->
      markdown """
        OJ can be run in a web browser without installation. Simply add the script `oj.js` and you are good to go.

        To use OJ on the server you will need to install the `oj` command built on top of [node.js](http://nodejs.org). For this you need to install node and its package manager `npm`. There are many ways to do this installation, but this will get you started:

        Install `node` on OSX with [homebrew](http://mxcl.github.com/homebrew/):

            brew install node

        Install `node` on Ubuntu with apt-get:

            sudo apt-get install nodejs npm

        Install `node` on Windows:

            ??? =) ???

        Finally install `oj` with `npm`:

            npm install -g oj
      """
  }
  {
    section: 'File Types'
    anchor: 'file-types'
    content: ->
      markdown """
        OJ is a javascript library and works just fine in `.js`, or `.coffee` files. The only issue is one of namespace; It gets tiring writing `oj.Table`, `oj.div`, etc.

        To solve this OJ supports two file types:

        * `.oj` is javascript
        * `.ojc` is coffee-script

        The `oj` command uses node's extension system to allow node to understand these files in a first class way. When they are found they will automatically give your code access to what is in oj.
      """
  }
  {
    section: 'Command Line'
    anchor: 'command-line'
    content: ->
      markdown """
        Commandline usage goes here...
      """
  }
  {
    section: 'Creating Types'
    anchor: 'creating-types'
    content: ->
      markdown """
        Creating types...
      """
    items: [
      {
        name:'type'
        anchor:'type-function'
        content: ->
          markdown """
            The `type` function exists
          """
      }
      {
        name:'typeOf'
        anchor:'typeOf-function'
        content: ->
          markdown """
            The `typeOf` function exists too
        """
      }
    ]
  }
]


###


Command Line


Creating Types

  type
  typeOf
  isUndefined
  isBoolean
  isNumber
  isString
  isDate
  isFunction
  isArray
  isRegEx
  isDOM
  isDOMElement
  isDOMAttribute
  isDOMText
  isjQuery
  isBackbone
  isOJ
  isArguments
  addProperty
  addProperties
  addMethod
  addMethods

Inheritable Types

  View
  ModelView
  FormView

Layout Libraries

  Tabs

Form Libraries

  Form
  CheckBox
  ListBox
  TextBox
  TextArea
  FilterBox
  SearchBox

Utility Libraries

  markdown
  mustache

Examples

FAQ

Versions













###